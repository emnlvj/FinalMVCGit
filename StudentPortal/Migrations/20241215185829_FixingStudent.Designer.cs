// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentPortal.Data;

#nullable disable

namespace StudentPortal.Migrations
{
    [DbContext(typeof(StudentEntryDbContext))]
    [Migration("20241215185829_FixingStudent")]
    partial class FixingStudent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentPortal.Models.PreRequisite", b =>
                {
                    b.Property<string>("PreSubjCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PreDescript")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PreUnits")
                        .HasColumnType("int");

                    b.Property<string>("SubjCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PreSubjCode");

                    b.HasIndex("SubjCode");

                    b.ToTable("PreSubjectInfo");
                });

            modelBuilder.Entity("StudentPortal.Models.Schedule", b =>
                {
                    b.Property<int>("SubEdpCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubEdpCode"));

                    b.Property<string>("AMPM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("curryear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("endtime")
                        .HasColumnType("time");

                    b.Property<int>("roomnum")
                        .HasColumnType("int");

                    b.Property<string>("section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("starttime")
                        .HasColumnType("time");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubEdpCode");

                    b.HasIndex("SubjCode");

                    b.ToTable("ScheduleInfo");
                });

            modelBuilder.Entity("StudentPortal.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentInfo");
                });

            modelBuilder.Entity("StudentPortal.Models.StudentEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("SubEdpCode")
                        .HasColumnType("int");

                    b.HasKey("Id", "SubEdpCode");

                    b.HasIndex("SubEdpCode");

                    b.ToTable("StudentEnrollment");
                });

            modelBuilder.Entity("StudentPortal.Models.Subject", b =>
                {
                    b.Property<string>("SubjCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CatCourse")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrYear")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Descript")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Offering")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("SubjCode");

                    b.ToTable("SubjectInfo");
                });

            modelBuilder.Entity("StudentPortal.Models.PreRequisite", b =>
                {
                    b.HasOne("StudentPortal.Models.Subject", "Subject")
                        .WithMany("PreRequisite")
                        .HasForeignKey("SubjCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentPortal.Models.Schedule", b =>
                {
                    b.HasOne("StudentPortal.Models.Subject", "Subject")
                        .WithMany("Schedule")
                        .HasForeignKey("SubjCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentPortal.Models.StudentEnrollment", b =>
                {
                    b.HasOne("StudentPortal.Models.Student", "Student")
                        .WithMany("StudentEnrollment")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentPortal.Models.Schedule", "Schedule")
                        .WithMany("StudentEnrollment")
                        .HasForeignKey("SubEdpCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentPortal.Models.Schedule", b =>
                {
                    b.Navigation("StudentEnrollment");
                });

            modelBuilder.Entity("StudentPortal.Models.Student", b =>
                {
                    b.Navigation("StudentEnrollment");
                });

            modelBuilder.Entity("StudentPortal.Models.Subject", b =>
                {
                    b.Navigation("PreRequisite");

                    b.Navigation("Schedule");
                });
#pragma warning restore 612, 618
        }
    }
}
